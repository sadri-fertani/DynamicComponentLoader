{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/ad.component.ts","webpack:///./src/app/core/ad.directive.ts","webpack:///./src/app/custom-ad/input-ad/input-ad.component.html","webpack:///./src/app/custom-ad/input-ad/input-ad.component.ts","webpack:///./src/app/custom-ad/input-checkbox-ad/input-checkbox-ad.component.html","webpack:///./src/app/custom-ad/input-checkbox-ad/input-checkbox-ad.component.ts","webpack:///./src/app/custom-ad/input-date-ad/input-date-ad.component.html","webpack:///./src/app/custom-ad/input-date-ad/input-date-ad.component.ts","webpack:///./src/app/custom-ad/input-email-ad/input-email-ad.component.html","webpack:///./src/app/custom-ad/input-email-ad/input-email-ad.component.ts","webpack:///./src/app/custom-ad/input-radio-ad/input-radio-ad.component.html","webpack:///./src/app/custom-ad/input-radio-ad/input-radio-ad.component.ts","webpack:///./src/app/custom-ad/select-ad/select-ad.component.html","webpack:///./src/app/custom-ad/select-ad/select-ad.component.ts","webpack:///./src/app/custom-ad/textarea-ad/textarea-ad.component.html","webpack:///./src/app/custom-ad/textarea-ad/textarea-ad.component.ts","webpack:///./src/app/models/ad-item.ts","webpack:///./src/app/services/ad.data.service.ts","webpack:///./src/app/services/ad.factory.service.ts","webpack:///./src/app/shared/types.ts","webpack:///./src/app/shared/utils.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"jumbotron\\\">\\n    <fieldset class=\\\"form-group\\\">\\n        <legend>{{adForm.legendLabel}}</legend>\\n        <br />\\n        <form [formGroup]=\\\"form\\\" novalidate>\\n            <div class=\\\"form-row\\\" *ngFor=\\\"let currentRow of adForm.rows\\\">\\n                <div class=\\\"form-group\\\" *ngFor=\\\"let currentComponent of currentRow.lstComponent;\\\"\\n                    [ngClass]=\\\"getClass(currentRow.nbreComponent)\\\">\\n                    <app-ad [ads]=\\\"currentComponent\\\" [form]=\\\"form\\\" [displayFieldCss]=\\\"displayFieldCss\\\"></app-ad>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-row\\\">\\n                <button class=\\\"btn btn-secondary\\\" (click)=\\\"reset()\\\">Cancel</button>\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"onSubmit()\\\" [disabled]=\\\"!form.valid\\\">{{adForm.submitLabel}}</button>\\n            </div>\\n        </form>\\n    </fieldset>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { AdDataService } from './services/ad.data.service';\nimport { AdFactoryService } from './services/ad.factory.service';\n\nimport { createControlConfig, createRowsItems } from './shared/utils';\n\nimport { AdFormRows } from './models/ad-form-rows';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\n\nexport class AppComponent implements OnInit {\n  form: FormGroup;\n  adForm: AdFormRows;\n\n  constructor(private dataService: AdDataService, private factoryService: AdFactoryService, private formBuilder: FormBuilder) {\n    this.displayFieldCss = this.displayFieldCss.bind(this);\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.form.controls; }\n\n  ngOnInit() {\n    const dataFormDesc = this.dataService.getCustomFormDescription();\n\n    this.adForm = {\n      legendLabel: dataFormDesc.legendLabel,\n      submitLabel: dataFormDesc.submitLabel,\n      rows: createRowsItems(dataFormDesc.customRows, this.factoryService)\n    } as AdFormRows;\n\n\n    // https://coryrylan.com/blog/creating-a-dynamic-checkbox-list-in-angular\n    \n    this.form = this.formBuilder.group(createControlConfig(dataFormDesc));\n  }\n\n  onSubmit() {\n    if (this.form.invalid) {\n      return;\n    }\n\n    console.log(JSON.stringify(this.form.value));\n  }\n\n  reset() {\n    console.log(JSON.stringify(this.form.value));\n    this.form.reset();\n  }\n\n  getClass(nbreComponent: number) {\n    return 'col-md-' + (12 / nbreComponent).toString();\n  }\n\n  displayFieldCss(field: string) {\n    return { 'is-invalid': !this.form.get(field).valid && this.form.get(field).touched };\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\n\nimport { AdComponent } from './core/ad.component';\nimport { AdDirective } from './core/ad.directive';\n\nimport { InputAdComponent } from './custom-ad/input-ad/input-ad.component';\nimport { InputRadioAdComponent } from './custom-ad/input-radio-ad/input-radio-ad.component';\nimport { InputCheckboxAdComponent } from './custom-ad/input-checkbox-ad/input-checkbox-ad.component';\nimport { InputEmailAdComponent } from './custom-ad/input-email-ad/input-email-ad.component';\nimport { InputDateAdComponent } from './custom-ad/input-date-ad/input-date-ad.component';\nimport { TextareaAdComponent } from './custom-ad/textarea-ad/textarea-ad.component';\nimport { SelectAdComponent } from './custom-ad/select-ad/select-ad.component';\n\nimport { AdFactoryService } from './services/ad.factory.service';\nimport { AdDataService } from './services/ad.data.service';\n\n@NgModule({\n  imports: [\n    NgbModule,\n    BrowserModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    AdDataService,\n    AdFactoryService\n  ],\n  declarations: [\n    AppComponent,\n    AdComponent,\n    InputAdComponent,\n    InputRadioAdComponent,\n    InputCheckboxAdComponent,\n    InputEmailAdComponent,\n    InputDateAdComponent,\n    TextareaAdComponent,\n    SelectAdComponent,\n    AdDirective\n  ],\n  entryComponents: [\n    InputAdComponent,\n    InputRadioAdComponent,\n    InputCheckboxAdComponent,\n    InputEmailAdComponent,\n    InputDateAdComponent,\n    TextareaAdComponent,\n    SelectAdComponent\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule {\n  constructor() { }\n}\n","import { Component, Input, OnInit, ViewChild, ComponentFactoryResolver } from '@angular/core';\n\nimport { AdDirective } from './ad.directive';\nimport { AdItem } from '../models/ad-item';\nimport { AdModelComponent } from '../models/ad.component';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-ad',\n  template: `<ng-template ad-host></ng-template>`\n})\nexport class AdComponent implements OnInit {\n  @Input() ads: AdItem;\n  @Input() displayFieldCss: Function;\n  @Input() form: FormGroup;\n\n  @ViewChild(AdDirective) adHost: AdDirective;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) {\n    // Empty...\n  }\n\n  ngOnInit() {\n    this.loadComponent();\n  }\n\n  loadComponent() {\n    let componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.ads.component);\n\n    let componentRef = this.adHost.viewContainerRef.createComponent(componentFactory);\n    (<AdModelComponent>componentRef.instance).data = this.ads.data;\n    (<AdModelComponent>componentRef.instance).controlName = this.ads.controlName;\n    (<AdModelComponent>componentRef.instance).placeHolder = this.ads.placeHolder;\n    (<AdModelComponent>componentRef.instance).required = this.ads.required;\n    (<AdModelComponent>componentRef.instance).label = this.ads.label;\n\n    (<AdModelComponent>componentRef.instance).displayFieldCss = this.displayFieldCss;\n\n    (<AdModelComponent>componentRef.instance).form = this.form;\n  }\n}\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[ad-host]',\n})\nexport class AdDirective {\n  constructor(public viewContainerRef: ViewContainerRef) { }\n}\n\n","module.exports = \"<form [formGroup]=\\\"form\\\">\\n    <label class=\\\"center-block\\\" [ngClass]=\\\"{'required' : required}\\\" [for]=\\\"controlName\\\">{{label}}</label>\\n    <input type=\\\"text\\\" [attr.id]=\\\"controlName\\\" class=\\\"form-control\\\" [formControlName]=\\\"controlName\\\"\\n        [placeholder]=\\\"placeHolder\\\" [ngClass]=\\\"displayFieldCss(controlName)\\\">\\n</form>\"","import { Component, Input } from '@angular/core';\nimport { AdModelComponent } from '../../models/ad.component';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  templateUrl: './input-ad.component.html'\n})\n\nexport class InputAdComponent implements AdModelComponent {\n  @Input() form: FormGroup;\n  @Input() displayFieldCss: Function;\n  @Input() controlName: string;\n  @Input() placeHolder: string;\n  @Input() required: boolean;\n  @Input() label: string;\n}\n","module.exports = \"<form [formGroup]=\\\"form\\\">\\n    <label class=\\\"center-block\\\" [ngClass]=\\\"{'required' : required}\\\">{{label}}</label>\\n    <div class=\\\"form-check\\\" *ngFor=\\\"let currentData of form.controls[controlName].controls; let i = index\\\">\\n        <label class=\\\"form-check-label\\\" [formArrayName]=\\\"controlName\\\">\\n            <input class=\\\"form-check-input\\\" [name]=\\\"data[i].label\\\" [value]=\\\"data[i].value\\\" [checked]=\\\"currentData.value.checked\\\" type=\\\"checkbox\\\" [formControlName]=\\\"i\\\" (change)=\\\"onCheckboxChange($event)\\\" >\\n            {{data[i].label}}\\n        </label>\\n    </div>\\n</form>\"","import { Component, Input } from '@angular/core';\nimport { AdModelComponent } from '../../models/ad.component';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  templateUrl: './input-checkbox-ad.component.html'\n})\n\nexport class InputCheckboxAdComponent implements AdModelComponent {\n  @Input() form: FormGroup;\n  @Input() displayFieldCss: Function;\n  @Input() controlName: string;\n  @Input() required: boolean;\n  @Input() label: string;\n  @Input() data: any[];\n\n  onCheckboxChange(event) {\n    const indexCurrentElement = this.data.findIndex(e => e.value === event.target.value);\n    \n    if (indexCurrentElement === -1) return;\n\n    ((this.form.get(this.controlName) as any).controls as any[])[indexCurrentElement].setValue(\n      {\n        label: event.target.name,\n        value: event.target.value,\n        checked: event.target.checked\n      }\n    );\n  }\n}\n","module.exports = \"<p>These datepickers use custom Date adapter that lets you use your own model implementation.\\n    In this example we are converting from and to a JS native Date object</p>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-6\\\">\\n        <form class=\\\"form-inline\\\">\\n            <div class=\\\"form-group\\\">\\n                <div class=\\\"input-group\\\">\\n                    <input class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"d2\\\" #c2=\\\"ngModel\\\" [(ngModel)]=\\\"model2\\\"\\n                        ngbDatepicker #d2=\\\"ngbDatepicker\\\">\\n                    <div class=\\\"input-group-append\\\">\\n                        <button class=\\\"btn btn-outline-secondary calendar\\\" (click)=\\\"d2.toggle()\\\" type=\\\"button\\\"></button>\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n\\n        <hr />\\n        <button class=\\\"btn btn-sm btn-outline-primary\\\" (click)=\\\"model2 = today\\\">Select Today</button>\\n        <hr />\\n\\n        <pre>Model: {{ model2 | json }}</pre>\\n        <pre>State: {{ c2.status }}</pre>\\n    </div>\\n\\n</div>\"","import { Component, Input } from '@angular/core';\nimport { NgbDateAdapter, NgbDateNativeAdapter } from '@ng-bootstrap/ng-bootstrap';\nimport { AdModelComponent } from 'src/app/models/ad.component';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    templateUrl: './input-date-ad.component.html',\n    providers: [{ provide: NgbDateAdapter, useClass: NgbDateNativeAdapter }]\n})\n\nexport class InputDateAdComponent implements AdModelComponent {\n    @Input() form: FormGroup;\n    @Input() displayFieldCss: Function;\n    @Input() controlName: string;\n    @Input() required: boolean;\n    @Input() label: string;\n    @Input() data: any[];\n    \n    model2: Date;\n\n    get today() {\n        return new Date();\n    }\n}","module.exports = \"<form [formGroup]=\\\"form\\\">\\n    <label class=\\\"center-block\\\" [ngClass]=\\\"{'required' : required}\\\" [for]=\\\"controlName\\\">{{label}}</label>\\n    <input type=\\\"email\\\" [attr.id]=\\\"controlName\\\" class=\\\"form-control\\\" [formControlName]=\\\"controlName\\\"\\n        [placeholder]=\\\"placeHolder\\\" [ngClass]=\\\"displayFieldCss(controlName)\\\">\\n</form>\"","import { Component, Input } from '@angular/core';\nimport { AdModelComponent } from '../../models/ad.component';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  templateUrl: './input-email-ad.component.html'\n})\n\nexport class InputEmailAdComponent implements AdModelComponent {\n  @Input() form: FormGroup;\n  @Input() displayFieldCss: Function;\n  @Input() controlName: string;\n  @Input() placeHolder: string;\n  @Input() required: boolean;\n  @Input() label: string;\n}\n","module.exports = \"<form [formGroup]=\\\"form\\\">\\n    <label class=\\\"center-block\\\" [ngClass]=\\\"{'required' : required}\\\">{{label}}</label>\\n    <div class=\\\"form-check\\\" *ngFor=\\\"let currentData of data\\\">\\n        <input class=\\\"form-check-input\\\" type=\\\"radio\\\" id=\\\"{{controlName + '-' + currentData.value}}\\\"\\n            [formControlName]=\\\"controlName\\\" [value]=\\\"currentData\\\">\\n        <label class=\\\"form-check-label\\\" for=\\\"{{controlName + '-' + currentData.value}}\\\">\\n            {{currentData.label}}\\n        </label>\\n    </div>\\n</form>\\n\"","import { Component, Input } from '@angular/core';\nimport { AdModelComponent } from '../../models/ad.component';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  templateUrl: './input-radio-ad.component.html'\n})\n\nexport class InputRadioAdComponent implements AdModelComponent {\n  @Input() form: FormGroup;\n  @Input() displayFieldCss: Function;\n  @Input() controlName: string;\n  @Input() required: boolean;\n  @Input() label: string;\n  @Input() data: any[];\n}\n","module.exports = \"<form [formGroup]=\\\"form\\\">\\n    <label class=\\\"center-block\\\" [ngClass]=\\\"{'required' : required}\\\" [for]=\\\"controlName\\\">{{label}}</label>\\n    <select [attr.id]=\\\"controlName\\\" class=\\\"form-control\\\" [formControlName]=\\\"controlName\\\"\\n        [ngClass]=\\\"displayFieldCss(controlName)\\\">\\n        <option *ngFor=\\\"let currentData of data\\\" [ngValue]=\\\"currentData\\\">\\n            {{ currentData.label }}\\n        </option>\\n    </select>\\n</form>\"","import { Component, Input } from '@angular/core';\nimport { AdModelComponent } from '../../models/ad.component';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  templateUrl: './select-ad.component.html'\n})\n\nexport class SelectAdComponent implements AdModelComponent {\n  @Input() form: FormGroup;\n  @Input() displayFieldCss: Function;\n  @Input() data: any[];\n  @Input() controlName: string;\n  @Input() required: boolean;\n  @Input() label: string;\n}\n","module.exports = \"<form [formGroup]=\\\"form\\\">\\n    <label class=\\\"center-block\\\" [ngClass]=\\\"{'required' : required}\\\" [for]=\\\"controlName\\\">{{label}}</label>\\n    <textarea class=\\\"form-control\\\" [attr.id]=\\\"controlName\\\" [formControlName]=\\\"controlName\\\" [placeholder]=\\\"placeHolder\\\"\\n        [ngClass]=\\\"displayFieldCss(controlName)\\\" rows=\\\"3\\\"></textarea>\\n</form>\"","import { Component, Input } from '@angular/core';\nimport { AdModelComponent } from '../../models/ad.component';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  templateUrl: './textarea-ad.component.html'\n})\n\nexport class TextareaAdComponent implements AdModelComponent {\n  @Input() form: FormGroup;\n  @Input() displayFieldCss: Function;\n  @Input() controlName: string;\n  @Input() placeHolder: string;\n  @Input() required: boolean;\n  @Input() label: string;\n}\n","import { Type } from '@angular/core';\n\nexport class AdItem {\n  constructor(public component: Type<any>, public label: string, public controlName: string, public required: boolean = false, public placeHolder?: string, public data?: any) { }\n}\n","import { Injectable } from '@angular/core';\n\nimport { CustomForm } from '../models/custom-form';\nimport { CustomControl } from '../models/custom-control';\nimport { CustomRow } from '../models/custom-row';\nimport { CustomControlNameEnum } from '../shared/types';\n\n@Injectable()\nexport class AdDataService {\n    getCustomFormDescription(): CustomForm {\n        return {\n            legendLabel: 'Dynamic form validation',\n            submitLabel: 'Save',\n            customRows: [\n                {\n                    position: 0,\n                    customControls: [\n                        {\n                            type: CustomControlNameEnum.Text,\n                            required: true,\n                            label: 'First name',\n                            controlName: 'firstName',\n                            placeHolder: 'Enter your first name'\n                        },\n                        {\n                            type: CustomControlNameEnum.Text,\n                            required: true,\n                            label: 'Last name',\n                            controlName: 'lastName',\n                            placeHolder: 'Enter your last name'\n                        },\n                        {\n                            type: CustomControlNameEnum.Date,\n                            required: false,\n                            label: 'Birthday',\n                            controlName: 'birthday',\n                            placeHolder: 'dd/MM/yyyy'\n                        }\n                    ] as CustomControl[]\n                },\n                {\n                    position: 1,\n                    customControls: [\n                        {\n                            type: CustomControlNameEnum.Text,\n                            required: false,\n                            label: 'City',\n                            controlName: 'city',\n                            placeHolder: 'Enter your city'\n                        },\n                        {\n                            type: CustomControlNameEnum.List,\n                            required: true,\n                            label: 'State',\n                            controlName: 'state',\n                            data: [\n                                { name: '', label: '' },\n                                { name: 'Arizona', label: 'AZ' },\n                                { name: 'California', label: 'CA' },\n                                { name: 'Colorado', label: 'CO' },\n                                { name: 'New York', label: 'NY' },\n                                { name: 'Pennsylvania', label: 'PA' },\n                            ]\n                        },\n                        {\n                            type: CustomControlNameEnum.Text,\n                            required: false,\n                            label: 'Zip',\n                            controlName: 'zip',\n                            placeHolder: 'Enter your zip code'\n                        }\n                    ] as CustomControl[]\n                },\n                {\n                    position: 2,\n                    customControls: [\n                        {\n                            type: CustomControlNameEnum.Email,\n                            required: true,\n                            label: 'E-mail',\n                            controlName: 'email',\n                            placeHolder: 'Enter your e-mail'\n                        }\n                    ] as CustomControl[]\n                },\n                {\n                    position: 3,\n                    customControls: [\n                        {\n                            type: CustomControlNameEnum.Radio,\n                            required: true,\n                            label: 'Gender',\n                            controlName: 'gender',\n                            data : [\n                                {\n                                    label : 'Male',\n                                    value : 'Male'\n                                },\n                                {\n                                    label : 'Female',\n                                    value : 'Female'\n                                }\n                            ]\n                        },\n                        {\n                            type: CustomControlNameEnum.Checkbox,\n                            required: true,\n                            label: 'Your skills',\n                            controlName: 'skills',\n                            data : [\n                                {\n                                    label : 'c#',\n                                    value : 'csharp'\n                                },\n                                {\n                                    label : 'Angular',\n                                    value : 'angular'\n                                },\n                                {\n                                    label : 'React',\n                                    value : 'react'\n                                },\n                                {\n                                    label : 'Sql Server',\n                                    value : 'sqlserver'\n                                },\n                                {\n                                    label : 'Cobol',\n                                    value : 'cobol'\n                                },\n                                {\n                                    label : 'DB2',\n                                    value : 'db2'\n                                }\n                            ]\n                        },\n                        {\n                            type: CustomControlNameEnum.MultiLignes,\n                            required: true,\n                            label: 'Comment',\n                            controlName: 'comment',\n                            placeHolder: 'Enter your comment'\n                        }\n                    ] as CustomControl[]\n                }\n            ] as CustomRow[]\n        } as CustomForm;\n    }\n}\n","import { Injectable, Type } from '@angular/core';\n\nimport { InputAdComponent } from '../custom-ad/input-ad/input-ad.component';\nimport { InputRadioAdComponent } from '../custom-ad/input-radio-ad/input-radio-ad.component';\nimport { InputCheckboxAdComponent } from '../custom-ad/input-checkbox-ad/input-checkbox-ad.component';\nimport { InputEmailAdComponent } from '../custom-ad/input-email-ad/input-email-ad.component';\nimport { InputDateAdComponent } from '../custom-ad/input-date-ad/input-date-ad.component';\nimport { TextareaAdComponent } from '../custom-ad/textarea-ad/textarea-ad.component';\nimport { SelectAdComponent } from '../custom-ad/select-ad/select-ad.component';\n\nimport { AdModelComponent } from '../models/ad.component';\nimport { CustomControlNameEnum } from '../shared/types';\n\n@Injectable()\nexport class AdFactoryService {\n  getAdComponent(customControlName: CustomControlNameEnum): Type<AdModelComponent> {\n    switch (customControlName) {\n      case CustomControlNameEnum.Text:\n        return InputAdComponent;\n      case CustomControlNameEnum.Radio:\n        return InputRadioAdComponent;\n      case CustomControlNameEnum.Checkbox:\n        return InputCheckboxAdComponent;\n      case CustomControlNameEnum.Email:\n        return InputEmailAdComponent;\n      case CustomControlNameEnum.Date:\n        return InputDateAdComponent;\n      case CustomControlNameEnum.MultiLignes:\n        return TextareaAdComponent;\n      case CustomControlNameEnum.List:\n        return SelectAdComponent;\n      default:\n        throw new Error(`Custom control name : ${customControlName} are unknown`);\n    }\n  }\n}\n","export enum CustomControlNameEnum {\n    Text = 'Text',\n    Radio = 'Radio',\n    Checkbox = 'Checkbox',\n    List = 'List',\n    Email = 'Email',\n    Date = 'Date',\n    MultiLignes = 'MultiLignes'\n}","import { CustomForm } from \"../models/custom-form\";\nimport { CustomRow } from \"../models/custom-row\";\nimport { CustomControl } from \"../models/custom-control\";\nimport { Validators, AbstractControl, ValidationErrors, FormArray, FormControl, ValidatorFn } from \"@angular/forms\";\nimport { AdRowItems } from \"../models/ad-row-items\";\nimport { AdItem } from \"../models/ad-item\";\nimport { AdFactoryService } from \"../services/ad.factory.service\";\nimport { CustomControlNameEnum } from \"./types\";\n\nexport function createControlConfig(customForm: CustomForm): any {\n    let config = {};\n\n    customForm.customRows.forEach((row: CustomRow) => {\n        row.customControls.forEach((ctr: CustomControl) => {\n\n            if (ctr.type === CustomControlNameEnum.Checkbox) {\n                config[ctr.controlName as any] = new FormArray(ctr.data.map((item) => {\n                    return new FormControl({\n                        label: item.label,\n                        value: item.value,\n                        checked: false\n                    });\n                }), getValidator(ctr));\n            } else {\n                config[ctr.controlName as any] = ['', getValidator(ctr)];\n            }\n        });\n    });\n\n    return config;\n}\n\nfunction getValidator(ctr: CustomControl): ((control: AbstractControl) => ValidationErrors)[] {\n    let validatorList = [] as ((control: AbstractControl) => ValidationErrors)[];\n\n    switch (ctr.type) {\n        case CustomControlNameEnum.Email:\n            validatorList.push(Validators.email);\n            break;\n        default:\n            break;\n    }\n\n    if (ctr.required) {\n        switch (ctr.type) {\n            case CustomControlNameEnum.Checkbox:\n                validatorList.push(minSelectedCheckboxes(1));\n                break;\n            default:\n                validatorList.push(Validators.required);\n                break;\n        }\n\n    }\n\n    if (validatorList.length === 0) { validatorList.push(Validators.nullValidator); }\n\n    return validatorList;\n}\n\nexport function createRowsItems(rows: CustomRow[], factoryService: AdFactoryService): AdRowItems[] {\n    let adRows = [] as AdRowItems[];\n\n    rows.forEach((row: CustomRow) => {\n        adRows.push({\n            nbreComponent: row.customControls.length,\n            lstComponent: createControl(row.customControls, factoryService)\n        } as AdRowItems);\n    });\n\n    return adRows;\n}\n\nfunction createControl(ctrls: CustomControl[], factoryService: AdFactoryService): AdItem[] {\n    let adItems = [] as AdItem[];\n\n    ctrls.forEach((ctrl: CustomControl) => {\n        adItems.push(\n            new AdItem(factoryService.getAdComponent(ctrl.type), ctrl.label, ctrl.controlName, ctrl.required, ctrl.placeHolder, ctrl.data)\n        );\n    });\n\n    return adItems;\n}\n\n// Original : https://coryrylan.com/blog/creating-a-dynamic-checkbox-list-in-angular\nfunction minSelectedCheckboxes(min = 1) {\n    const validator: ValidatorFn = (formArray: FormArray) => {\n\n        const totalSelected = formArray.controls\n            .map(control => control.value)\n            .reduce((prev, next) => next.checked ? prev + 1 : prev, 0);\n            \n        return totalSelected >= min ? null : { required: true };\n    };\n\n    return validator;\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"sourceRoot":""}